{"is_source_file": true, "format": "TypeScript", "description": "This is an Angular service class 'FoldersService' responsible for managing folder data. It provides methods to load, retrieve, create, update, and delete folders by communicating with a backend API. The service uses HttpClient for HTTP requests and RxJS for reactive data handling.", "external_files": ["../models/folder.model", "@angular/core", "@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.patch", "HttpClient.delete", "BehaviorSubject.asObservable", "map"], "published": ["folders$"], "classes": [{"name": "FoldersService", "description": "Angular service for folder management, providing CRUD operations and reactive folder data stream."}], "methods": [{"name": "loadFolders", "description": "Initial loads folder data from backend API and updates the BehaviorSubject."}, {"name": "getFolders", "description": "Returns observable stream of folder array for subscribers."}, {"name": "getFolder", "description": "Fetches a single folder by ID from backend API."}, {"name": "createFolder", "description": "Creates a new folder, updates the folder list, and returns the created folder."}, {"name": "updateFolder", "description": "Updates an existing folder by ID with partial data, updates the folder list, and returns the updated folder."}, {"name": "deleteFolder", "description": "Deletes a folder by ID and updates the folder list."}], "calls": ["this.http.get", "this.http.post", "this.http.patch", "this.http.delete", "this.foldersSubject.next", "this.foldersSubject.value"], "search-terms": ["Angular Folder Service", "Folder management API", "Folders BehaviorSubject", "Folders CRUD Angular", "folder.model import"], "state": 2, "file_id": 24, "knowledge_revision": 50, "git_revision": "", "ctags": [{"_type": "tag", "name": "FoldersService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-157408-157417/notes_frontend/src/app/services/folders.service.ts", "pattern": "/^export class FoldersService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "apiUrl", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-157408-157417/notes_frontend/src/app/services/folders.service.ts", "pattern": "/^  private apiUrl = '\\/api\\/folders';$/", "language": "TypeScript", "kind": "property", "scope": "FoldersService", "scopeKind": "class"}, {"_type": "tag", "name": "currentFolders", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-157408-157417/notes_frontend/src/app/services/folders.service.ts", "pattern": "/^        const currentFolders = this.foldersSubject.value;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "foldersSubject", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-157408-157417/notes_frontend/src/app/services/folders.service.ts", "pattern": "/^  private foldersSubject = new BehaviorSubject<Folder[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "FoldersService", "scopeKind": "class"}, {"_type": "tag", "name": "index", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-157408-157417/notes_frontend/src/app/services/folders.service.ts", "pattern": "/^        const index = currentFolders.findIndex(f => f.id === id);$/", "language": "TypeScript", "kind": "constant"}], "hash": "a45f9526779e47cf0286d06927df3bc7", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/folders.service.ts", "fields": [{"name": "private apiUrl = '\\/api\\/folders';", "scope": "FoldersService", "scopeKind": "class", "description": "unavailable"}, {"name": "private foldersSubject = new BehaviorSubject<Folder[]>([]);", "scope": "FoldersService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"50": ""}]}